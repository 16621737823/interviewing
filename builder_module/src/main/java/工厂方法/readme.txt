工厂方法模式包含以下角色：
抽象产品(Product): 定义产品的接口
具体产品(ConcreteProduct): 实现抽象产品接口的具体类
抽象工厂(Factory): 声明工厂方法
具体工厂(ConcreteFactory): 实现工厂方法，返回具体产品实例

优点：
完全符合"开闭原则"，新增产品时只需添加新的工厂类和产品类，无需修改现有代码
创建对象的细节完全封装在具体工厂内部
多态性设计，客户端代码只依赖抽象接口，不依赖具体实现

缺点：
每增加一个产品就需要增加一个具体工厂类，增加了系统的复杂度
引入了抽象层，增加了系统的抽象性和理解难度